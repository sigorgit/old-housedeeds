/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  KIP13InterfacesSupported,
  KIP13InterfacesSupportedInterface,
} from "../../../../../klaytn-contracts/mocks/KIP13/KIP13InterfacesSupported.sol/KIP13InterfacesSupported";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "INTERFACE_ID_KIP13",
    outputs: [
      {
        name: "",
        type: "bytes4",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        name: "interfaceIds",
        type: "bytes4[]",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103a33803806103a38339810180604052602081101561003357600080fd5b81019080805164010000000081111561004b57600080fd5b8281019050602081018481111561006157600080fd5b815185602082028301116401000000008211171561007e57600080fd5b505092919050505061009c6301ffc9a760e01b6100e160201b60201c565b60008090505b81518110156100da576100cd8282815181106100ba57fe5b60200260200101516100e160201b60201c565b80806001019150506100a2565b50506101cc565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415610160576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610375602e913960400191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61019a806101db6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063d81037cd146100a0575b600080fd5b6100866004803603602081101561005157600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506100fc565b604051808215151515815260200191505060405180910390f35b6100a8610163565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6301ffc9a760e01b8156fea165627a7a72305820bece481cbab1d00a16c16ed8bf8888ec7eec3019d62d4d01d41ab66e2194bd9400294b49503133496e7465726661636573537570706f727465643a20696e76616c696420696e74657266616365206964";

type KIP13InterfacesSupportedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KIP13InterfacesSupportedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KIP13InterfacesSupported__factory extends ContractFactory {
  constructor(...args: KIP13InterfacesSupportedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    interfaceIds: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KIP13InterfacesSupported> {
    return super.deploy(
      interfaceIds,
      overrides || {}
    ) as Promise<KIP13InterfacesSupported>;
  }
  override getDeployTransaction(
    interfaceIds: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(interfaceIds, overrides || {});
  }
  override attach(address: string): KIP13InterfacesSupported {
    return super.attach(address) as KIP13InterfacesSupported;
  }
  override connect(signer: Signer): KIP13InterfacesSupported__factory {
    return super.connect(signer) as KIP13InterfacesSupported__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KIP13InterfacesSupportedInterface {
    return new utils.Interface(_abi) as KIP13InterfacesSupportedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KIP13InterfacesSupported {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as KIP13InterfacesSupported;
  }
}
